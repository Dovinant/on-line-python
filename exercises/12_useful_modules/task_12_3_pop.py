# -*- coding: utf-8 -*-
'''
Задание 12.3


Создать функцию print_ip_table, которая отображает таблицу доступных и недоступных IP-адресов.

Функция ожидает как аргументы два списка:
* список доступных IP-адресов
* список недоступных IP-адресов

Результат работы функции - вывод на стандартный поток вывода таблицы вида:

Reachable    Unreachable
-----------  -------------
10.1.1.1     10.1.1.7
10.1.1.2     10.1.1.8
             10.1.1.9

Функция не должна изменять списки, которые переданы ей как аргументы.
То есть, до выполнения функции и после списки должны выглядеть одинаково.


Для этого задания нет тестов
'''

#Это вариает с изменением списков переданных функции
#Применим к спискам метод pop()
#Решение не соответствует условиям задания, сделано просто для упражнения

#Нам понадобится модуль tabulate
from tabulate import tabulate

#Создадим функцию
def print_ip_table(ip_r, ip_unr):
#Список columns содержит имена столбцов
    columns = ['Reachable', 'Unreachable']

#Нам нужен список списков, его потом передадим tabulate
    print_ls = []
#Если оба списка не пусты
    while (ip_r and ip_unr):
#Методом pop(0) убираем первый элемент из каждого списка и помещаем их
#В список row_ls
        row_ls = []
        row_ls.append(ip_r.pop(0))
        row_ls.append(ip_unr.pop(0))

#Добавляем пару доступный-недоступный IP в список print_ls
        print_ls.append(row_ls)
#Если список ip_r не пуст, то пуст ip_unr
#Вытаскиваем первый элемет из ip_r и добавляем в row_ls.
#Вместо элемента из ip_unr добавляем пустую строку
#И наоборот
    if ip_r:
        while ip_r:
            row_ls = []
            row_ls.append(ip_r.pop(0))
            row_ls.append('')
            print_ls.append(row_ls)
    else:
        while ip_unr:
            row_ls = []
            row_ls.append('')
            row_ls.append(ip_unr.pop(0))
            print_ls.append(row_ls)

#Можно отсортировать список
#print_ls.sorted()
    print(tabulate(print_ls, headers = columns))
#
#Создадим списки доступных и недоступных IP-адресов
ip_r = ['10.1.1.1', '10.1.1.2']
ip_unr = ['10.1.1.7', '10.1.1.8', '10.1.1.9']
#Вызываем функцию
print_ip_table(ip_r, ip_unr)
