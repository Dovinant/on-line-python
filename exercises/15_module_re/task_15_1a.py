# -*- coding: utf-8 -*-
'''
Задание 15.1a

Скопировать функцию get_ip_from_cfg из задания 15.1 и переделать ее таким образом, чтобы она возвращала словарь:
* ключ: имя интерфейса
* значение: кортеж с двумя строками:
  * IP-адрес
  * маска

В словарь добавлять только те интерфейсы, на которых настроены IP-адреса.

Например (взяты произвольные адреса):
{'FastEthernet0/1':('10.0.1.1', '255.255.255.0'),
 'FastEthernet0/2':('10.0.2.1', '255.255.255.0')}

Для получения такого результата, используйте регулярные выражения.

Проверить работу функции на примере файла config_r1.txt.

Обратите внимание, что в данном случае, можно не проверять корректность IP-адреса,
диапазоны адресов и так далее, так как обрабатывается вывод команды, а не ввод пользователя.

'''

#Нам нужен модуль re
import re
from pprint import pprint

#Создадим функцию
def get_ip_from_cfg(file_name):

#Создаём регулярное выражение
#В первую группу (\d+.\d+.\d+.\d+) поподёт IP, во вторую MASK

    regex = (r'ip address (\d+.\d+.\d+.\d+) (\d+.\d+.\d+.\d+)')

#Создадим пустой список. Потом в него поместим кортежи

    result = {}
	
#Открываем файл построчно

    with open(file_name) as f:
        for line in f:
            if line.startswith('interface'):
                intf = re.search('interface (\S+)', line).group(1)
            else:
                match = re.search(regex, line)
                if match:
            
#Создаём кортеж и добавляем его в список
                    tuple_r = (match.group(1), match.group(2))
                    result[intf] = tuple_r
                
    return(result)
#

pprint(get_ip_from_cfg('config_r1.txt'))
